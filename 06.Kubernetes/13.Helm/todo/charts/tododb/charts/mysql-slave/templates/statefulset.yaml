apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-slave
  labels:
    app: mysql-slave
spec:
  serviceName: mysql-slave
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: mysql-slave
  updateStrategy:
    type: OnDelete  
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: mysql-slave
    spec:
      serviceAccountName: {{ include "mysql-slave.serviceAccountName" . }}
      containers:
        - name: mysql-slave
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--ignore-db-dir=lost+found"
          ports:
            - containerPort: 3306
          env:
          - name: MYSQL_MASTER_HOST
            value: "mysql-master"
          - name: MYSQL_ROOT_PASSWORD
            value: "gihyo"
          - name: MYSQL_DATABASE
            value: "tododb"
          - name: MYSQL_USER
            value: "gihyo" 
          - name: MYSQL_PASSWORD
            value: "gihyo"
          - name: MYSQL_REPL_USER
            value: "repl"
          - name: MYSQL_REPL_PASSWORD
            value: "gihyo"
          volumeMounts:
          - name: mysql-data 
            mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ssd 
      resources:
        requests:
          storage: 4Gi            